// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversityAPI.Data;

namespace UniversityAPI.Migrations
{
    [DbContext(typeof(APIContext))]
    [Migration("20210422151446_AddPathWay")]
    partial class AddPathWay
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UniversityAPI.Models.PathWay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UniversityId");

                    b.ToTable("PathWays");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2021, 4, 22, 22, 14, 45, 783, DateTimeKind.Local).AddTicks(5307),
                            Difficulty = 1,
                            Distance = 1.0,
                            Name = "Nguyen Luong Bang",
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2021, 4, 22, 22, 14, 45, 785, DateTimeKind.Local).AddTicks(1407),
                            Difficulty = 0,
                            Distance = 2.0,
                            Name = "Ngu Hanh Son",
                            UniversityId = 2
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2021, 4, 22, 22, 14, 45, 785, DateTimeKind.Local).AddTicks(1456),
                            Difficulty = 2,
                            Distance = 1.5,
                            Name = "Luong Nhu Hoc",
                            UniversityId = 3
                        });
                });

            modelBuilder.Entity("UniversityAPI.Models.University", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Established")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Universities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "DUT",
                            Address = "Đà Nẵng",
                            Established = new DateTime(1975, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bách khoa Đà Nẵng"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "DUE",
                            Address = "Đà Nẵng",
                            Established = new DateTime(1975, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kinh tế Đà Nẵng"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "UFL",
                            Address = "Đà Nẵng",
                            Established = new DateTime(2002, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ngoại Ngữ Đà Nẵng"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "UTE",
                            Address = "Đà Nẵng",
                            Established = new DateTime(2017, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sư phạm kĩ thuật Đà Nẵng"
                        },
                        new
                        {
                            Id = 5,
                            Abbreviation = "UED",
                            Address = "Đà Nẵng",
                            Established = new DateTime(1994, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sư phạm Đà Nẵng"
                        },
                        new
                        {
                            Id = 6,
                            Abbreviation = "SMP",
                            Address = "Đà Nẵng",
                            Established = new DateTime(2007, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Khoa Y Dược Đà Nẵng"
                        },
                        new
                        {
                            Id = 7,
                            Abbreviation = "VKU",
                            Address = "Đà Nẵng",
                            Established = new DateTime(2020, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CNTT Việt-Hàn Đà Nẵng"
                        });
                });

            modelBuilder.Entity("UniversityAPI.Models.PathWay", b =>
                {
                    b.HasOne("UniversityAPI.Models.University", "University")
                        .WithMany()
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("University");
                });
#pragma warning restore 612, 618
        }
    }
}
